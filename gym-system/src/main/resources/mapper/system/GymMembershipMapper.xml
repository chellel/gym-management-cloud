<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gym.system.mapper.GymMembershipMapper">

	<resultMap type="GymMembership" id="GymMembershipResult">
		<id     property="id"             column="id"              />
		<result property="userId"         column="user_id"         />
		<result property="membershipType" column="membership_type" />
		<result property="startDate"       column="start_date"     />
		<result property="expireDate"     column="expire_date"     />
		<result property="status"         column="status"         />
		<result property="isDeleted"      column="is_deleted"     />
		<result property="deleteTime"    column="delete_time"     />
		<result property="userName"       column="user_name"      />
		<result property="userCode"       column="user_code"      />
		<result property="phone"          column="phone"          />
		<result property="createBy"       column="create_by"      />
		<result property="createTime"    column="create_time"    />
		<result property="updateBy"      column="update_by"      />
		<result property="updateTime"    column="update_time"    />
		<result property="remark"        column="remark"         />
	</resultMap>

	<sql id="selectGymMembershipVo">
        select m.id, m.user_id, m.membership_type, m.start_date, m.expire_date, m.status, 
               m.is_deleted, m.delete_time, m.create_by, m.create_time, m.update_by, m.update_time, m.remark,
               u.name as user_name, u.user_id as user_code, u.phone
        from gym_membership m
        left join gym_user u on m.user_id = u.id
    </sql>

	<select id="selectGymMembershipList" parameterType="GymMembership" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		<where>
			m.is_deleted = 0
			<if test="userId != null">
				AND m.user_id = #{userId}
			</if>
			<if test="membershipType != null and membershipType != ''">
				AND m.membership_type = #{membershipType}
			</if>
			<if test="status != null and status != ''">
				AND m.status = #{status}
			</if>
			<if test="userName != null and userName != ''">
				AND u.name like concat('%', #{userName}, '%')
			</if>
			<if test="userCode != null and userCode != ''">
				AND u.user_id like concat('%', #{userCode}, '%')
			</if>
			<if test="phone != null and phone != ''">
				AND u.phone = #{phone}
			</if>
			<if test="startDate != null">
				AND m.start_date >= #{startDate}
			</if>
			<if test="expireDate != null">
				AND m.expire_date &lt;= #{expireDate}
			</if>
		</where>
		order by m.create_time desc
	</select>

	<select id="selectGymMembershipById" parameterType="Long" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		where m.id = #{id}
	</select>

	<select id="selectGymMembershipByUserId" parameterType="Long" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		where m.user_id = #{userId} and m.is_deleted = 0
		order by m.create_time desc
	</select>

	<select id="selectActiveGymMembershipByUserId" parameterType="Long" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		where m.user_id = #{userId} and m.is_deleted = 0 and m.status = 'active'
		and m.start_date &lt;= CURDATE() and m.expire_date >= CURDATE()
		order by m.create_time desc
		limit 1
	</select>

	<select id="checkUserHasActiveMembership" parameterType="Long" resultType="int">
		select count(1) from gym_membership 
		where user_id = #{userId} and is_deleted = 0 and status = 'active'
		and start_date &lt;= CURDATE() and expire_date >= CURDATE()
	</select>

	<select id="selectExpiringMemberships" parameterType="int" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		where m.is_deleted = 0 and m.status = 'active'
		and m.expire_date between CURDATE() and DATE_ADD(CURDATE(), INTERVAL #{days} DAY)
		order by m.expire_date asc
	</select>

	<select id="selectExpiredMemberships" resultMap="GymMembershipResult">
		<include refid="selectGymMembershipVo"/>
		where m.is_deleted = 0 and m.status = 'active'
		and m.expire_date &lt; CURDATE()
		order by m.expire_date desc
	</select>

	<select id="selectGymMemberList" parameterType="com.gym.system.domain.dto.GymMemberDTO" resultType="com.gym.system.domain.dto.GymMemberDTO">
		select m.id as membershipId, m.user_id as userId, m.membership_type as membershipType, 
		       m.start_date as membershipStartDate, m.expire_date as membershipExpireDate, 
		       m.status as membershipStatus, m.remark,
		       u.user_id as userCode, u.name as userName, u.phone, u.email, u.gender, 
		       u.birth_date as birthDate, u.role, u.status as userStatus,
		       DATEDIFF(m.expire_date, CURDATE()) as remainingDays
		from gym_membership m
		left join gym_user u on m.user_id = u.id
		where m.is_deleted = 0 and u.is_deleted = 0
		<if test="userCode != null and userCode != ''">
			AND u.user_id like concat('%', #{userCode}, '%')
		</if>
		<if test="userName != null and userName != ''">
			AND u.name like concat('%', #{userName}, '%')
		</if>
		<if test="phone != null and phone != ''">
			AND u.phone = #{phone}
		</if>
		<if test="membershipType != null and membershipType != ''">
			AND m.membership_type = #{membershipType}
		</if>
		<if test="membershipStatus != null and membershipStatus != ''">
			AND m.status = #{membershipStatus}
		</if>
		<if test="userStatus != null and userStatus != ''">
			AND u.status = #{userStatus}
		</if>
		order by m.create_time desc
	</select>

	<insert id="insertGymMembership" parameterType="GymMembership" useGeneratedKeys="true" keyProperty="id">
		insert into gym_membership(
			<if test="userId != null">user_id,</if>
			<if test="membershipType != null and membershipType != ''">membership_type,</if>
			<if test="startDate != null">start_date,</if>
			<if test="expireDate != null">expire_date,</if>
			<if test="status != null and status != ''">status,</if>
			<if test="isDeleted != null">is_deleted,</if>
			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="createTime != null">create_time,</if>
			<if test="updateBy != null and updateBy != ''">update_by,</if>
			<if test="updateTime != null">update_time,</if>
			<if test="remark != null and remark != ''">remark</if>
		)values(
			<if test="userId != null">#{userId},</if>
			<if test="membershipType != null and membershipType != ''">#{membershipType},</if>
			<if test="startDate != null">#{startDate},</if>
			<if test="expireDate != null">#{expireDate},</if>
			<if test="status != null and status != ''">#{status},</if>
			<if test="isDeleted != null">#{isDeleted},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="createTime != null">#{createTime},</if>
			<if test="updateBy != null and updateBy != ''">#{updateBy},</if>
			<if test="updateTime != null">#{updateTime},</if>
			<if test="remark != null and remark != ''">#{remark}</if>
		)
	</insert>

	<update id="updateGymMembership" parameterType="GymMembership">
		update gym_membership
		<set>
			<if test="userId != null">user_id = #{userId},</if>
			<if test="membershipType != null and membershipType != ''">membership_type = #{membershipType},</if>
			<if test="startDate != null">start_date = #{startDate},</if>
			<if test="expireDate != null">expire_date = #{expireDate},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="isDeleted != null">is_deleted = #{isDeleted},</if>
			<if test="deleteTime != null">delete_time = #{deleteTime},</if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			<if test="updateTime != null">update_time = #{updateTime},</if>
			<if test="remark != null and remark != ''">remark = #{remark}</if>
		</set>
		where id = #{id}
	</update>

	<update id="updateGymMembershipStatus">
		update gym_membership SET status = #{status}, update_time = now() where id = #{id}
	</update>

	<update id="deleteGymMembershipById" parameterType="Long">
		update gym_membership set is_deleted = 1, delete_time = now() where id = #{id}
	</update>

	<update id="deleteGymMembershipByIds" parameterType="Long">
		update gym_membership set is_deleted = 1, delete_time = now() where id in
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

</mapper>
